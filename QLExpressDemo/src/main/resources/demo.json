{
  "linking": "All",
  "conditions": [
    {
      "classType": "SMPL",
      "expressions": [
        {
          "column": "fields.userIP",
          "type": "STRING",
          "classType": "ENTATTR"
        }
      ],
      "enabled": true,
      "operator": "IsNotNull"
    }
  ],
  "classType": "PDCT",
  "enabled": true
}

{
  "linking": "All",
  "conditions": [
    {
      "classType": "SMPL",
      "expressions": [
        {
          "column": "fields.userIP",
          "type": "STRING",
          "classType": "ENTATTR"
        }
      ],
      "enabled": true,
      "operator": "IsNotNull"
    }
  ],
  "classType": "PDCT",
  "enabled": true
}
//规则添加
// 指标 逻辑    结果
// 指标                 展示名称    编码        指标编码        变量类型
// {"id":"index001","name":"IP","code":"ip","unicode":"ip","type":"String"}
//  风险等级  大于  中级
{
  "conditions": [
    {
      "classType": "index", //指标 逻辑    结果
      "seq": 1, //排序
      "data": { //数据结构
        "key": "index001", //唯一标识
        "value": "风险等级", //展示名称
        "type": "String" //数据类型  下拉展示？ select ？
      }
    },
    {
      "classType": "separator", //指标 逻辑    结果
      "seq": 2, //排序
      "data": { //数据结构
        "key": "separator001", //唯一标识
        "value": "大于", //展示名称
        "type": "String" //数据类型  下拉展示？ select ？
      }
    },
    {
      "classType": "result", //指标 逻辑    结果
      "seq": 3, //排序
      "data": { //数据结构
        "key": "result001", //唯一标识
        "value": "中级", //展示名称
        "type": "select" //数据类型  下拉展示？ select ？
      }
    }
  ]
}
// 决策规则
// 逻辑 规则  逻辑 规则。。。 返回  结果  否则   结果
// 如果  规则1 && 规则2 && 规则3 返回 结果1 否则 返回 结果2
{
  "conditions": [
    {
      "classType": "separator", //指标 逻辑    结果
      "seq": 1, //排序
      "data": { //数据结构
        "key": "separator001", //唯一标识
        "value": "如果", //展示名称
        "type": "String" //数据类型  下拉展示？ select ？
      }
    },
    {
      "classType": "rule", //指标 逻辑    结果
      "seq": 2, //排序
      "data": { //数据结构
        "key": "rule001", //唯一标识
        "value": "规则1", //展示名称
        "type": "String" //数据类型  下拉展示？ select ？
      }
    },
    {
      "classType": "separator", //指标 逻辑    结果
      "seq": 3, //排序
      "data": { //数据结构
        "key": "separator002", //唯一标识
        "value": "&&", //展示名称
        "type": "String" //数据类型  下拉展示？ select ？
      }
    },
    {
      "classType": "rule", //指标 逻辑    结果
      "seq": 4, //排序
      "data": { //数据结构
        "key": "rule002", //唯一标识
        "value": "规则2", //展示名称
        "type": "String" //数据类型  下拉展示？ select ？
      }
    },
    {
      "classType": "separator", //指标 逻辑    结果
      "seq": 5, //排序
      "data": { //数据结构
        "key": "separator002", //唯一标识
        "value": "&&", //展示名称
        "type": "String" //数据类型  下拉展示？ select ？
      }
    },
    {
      "classType": "rule", //指标 逻辑    结果
      "seq": 6, //排序
      "data": { //数据结构
        "key": "rule003", //唯一标识
        "value": "规则3", //展示名称
        "type": "String" //数据类型  下拉展示？ select ？
      }
    },
    {
      "classType": "separator", //指标 逻辑    结果
      "seq": 7, //排序
      "data": { //数据结构
        "key": "separator003", //唯一标识
        "value": "返回", //展示名称
        "type": "String" //数据类型  下拉展示？ select ？
      }
    },
    {
      "classType": "result", //指标 逻辑    结果
      "seq": 8, //排序
      "data": { //数据结构
        "key": "result001", //唯一标识
        "value": "结果1", //展示名称
        "type": "select" //数据类型  下拉展示？ select ？
      }
    },
    {
      "classType": "separator", //指标 逻辑    结果
      "seq": 9, //排序
      "data": { //数据结构
        "key": "separator004", //唯一标识
        "value": "否则", //展示名称
        "type": "String" //数据类型  下拉展示？ select ？
      }
    },
    {
      "classType": "separator", //指标 逻辑    结果
      "seq": 10, //排序
      "data": { //数据结构
        "key": "separator003", //唯一标识
        "value": "返回", //展示名称
        "type": "String" //数据类型  下拉展示？ select ？
      }
    },
    {
      "classType": "result", //指标 逻辑    结果
      "seq": 11, //排序
      "data": { //数据结构
        "key": "result002", //唯一标识
        "value": "结果2", //展示名称
        "type": "select" //数据类型  下拉展示？ select ？
      }
    }
  ]
}