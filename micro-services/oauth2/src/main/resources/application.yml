#spring:
#  security:
#    oauth2:
#      client:
#        registration: #(1)spring.security.oauth2.client.registration是 OAuth 客户端属性的基本属性前缀。
#          login-client: #(2)在基本属性前缀之后是 的 ID ClientRegistration，例如 login-client。
#            provider: spring    #(3)该provider属性指定 this 使用哪个提供程序配置ClientRegistration。
#            client-id: login-client
#            client-secret: openid-connect
#            client-authentication-method: client_secret_basic
#            authorization-grant-type: authorization_code
#            redirect-uri: http://127.0.0.1:8080/login/oauth2/code/login-client
#            scope: openid,profile    #(4)openidSpring Authorization Server 需要范围来使用 OpenID Connect 1.0 执行身份验证。
#            client-name: Spring
#        provider: #(5)spring.security.oauth2.client.provider是 OAuth 提供者属性的基本属性前缀。
#          spring:
#            authorization-uri: http://localhost:9000/oauth2/authorize
#            token-uri: http://localhost:9000/oauth2/token
#            jwk-set-uri: http://localhost:9000/oauth2/jwks

server:
  port: 8080

logging:
  level:
    root: debug
    org.springframework.web: INFO
    org.springframework.security: INFO
#    org.springframework.boot.autoconfigure: DEBUG


# 安全认证的配置
#security:
#  basic:
#    enabled: true

#spring:
#  thymeleaf:
#    cache: false
#  security:
#    oauth2:
#      client:
#        registration:
#          login-client:
#            provider: spring
#            client-id: login-client
#            client-secret: openid-connect
#            client-authentication-method: client_secret_basic
#            authorization-grant-type: authorization_code
#            redirect-uri: http://127.0.0.1:8080/login/oauth2/code/login-client
#            scope: openid,profile
#            client-name: Spring
#          google:
#            client-id: your-app-client-id
#            client-secret: your-app-client-secret
#          github:
#            client-id: your-app-client-id
#            client-secret: your-app-client-secret
#          facebook:
#            client-id: your-app-client-id
#            client-secret: your-app-client-secret
#          okta:
#            client-id: your-app-client-id
#            client-secret: your-app-client-secret
#        provider:
#          spring:
#            authorization-uri: http://localhost:9000/oauth2/authorize
#            token-uri: http://localhost:9000/oauth2/token
#            jwk-set-uri: http://localhost:9000/oauth2/jwks
#          okta:
#            authorization-uri: https://your-subdomain.oktapreview.com/oauth2/v1/authorize
#            token-uri: https://your-subdomain.oktapreview.com/oauth2/v1/token
#            user-info-uri: https://your-subdomain.oktapreview.com/oauth2/v1/userinfo
#            jwk-set-uri: https://your-subdomain.oktapreview.com/oauth2/v1/keys